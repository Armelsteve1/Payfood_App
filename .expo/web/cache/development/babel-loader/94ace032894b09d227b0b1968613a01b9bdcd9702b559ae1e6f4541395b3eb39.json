{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport tailwind from 'tailwind-react-native-classnames';\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport { Ionicons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SearchBar = function SearchBar(_ref) {\n  var setCity = _ref.setCity,\n    city = _ref.city;\n  return _jsx(View, {\n    style: tailwind`flex-row mt-3 px-4 pb-3 border-b border-gray-100 border-b-2`,\n    children: _jsx(GooglePlacesAutocomplete, {\n      placeholder: city || \"Search\",\n      defaultValue: \"Paris\",\n      nearbyPlacesAPI: \"GooglePlacesSearch\",\n      debounce: 400,\n      onPress: function onPress(data) {\n        return setCity(data.structured_formatting.main_text);\n      },\n      minLength: 2,\n      fetchDetails: true,\n      returnKeyType: \"search\",\n      onFail: function onFail(error) {\n        return Alert.alert('Worning', error);\n      },\n      query: {\n        key: \"\",\n        language: 'fr'\n      },\n      styles: {\n        container: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        textInput: {\n          fontSize: 15,\n          fontWeight: '700',\n          backgroundColor: '#F3F4F6',\n          marginTop: 4\n        },\n        textInputContainer: {\n          backgroundColor: '#F3F4F6',\n          borderRadius: 40,\n          justifyContent: 'center'\n        }\n      },\n      enablePoweredByContainer: false,\n      renderLeftButton: function renderLeftButton() {\n        return _jsx(View, {\n          style: tailwind`self-center ml-3`,\n          children: _jsx(Ionicons, {\n            name: \"ios-location-sharp\",\n            size: 24,\n            color: \"#FF3C6E\"\n          })\n        });\n      },\n      renderRightButton: function renderRightButton() {\n        return _jsxs(TouchableOpacity, {\n          style: tailwind`self-center ml-3 flex-row items-center bg-white py-2 px-3 rounded-full mr-3`,\n          children: [_jsx(MaterialCommunityIcons, {\n            name: \"clock-time-four\",\n            size: 13,\n            color: \"#FF3C6E\"\n          }), _jsx(Text, {\n            style: tailwind`ml-1`,\n            children: \"Search\"\n          })]\n        });\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({});\nexport default SearchBar;","map":{"version":3,"names":["React","View","StyleSheet","Text","TouchableOpacity","Alert","tailwind","GooglePlacesAutocomplete","Ionicons","MaterialCommunityIcons","jsx","_jsx","jsxs","_jsxs","SearchBar","_ref","setCity","city","style","children","placeholder","defaultValue","nearbyPlacesAPI","debounce","onPress","data","structured_formatting","main_text","minLength","fetchDetails","returnKeyType","onFail","error","alert","query","key","language","styles","container","flex","justifyContent","alignItems","textInput","fontSize","fontWeight","backgroundColor","marginTop","textInputContainer","borderRadius","enablePoweredByContainer","renderLeftButton","name","size","color","renderRightButton","create"],"sources":["/home/armel/workspaceSchool/Payfood_App/src/components/SearchBar.js"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Text, TouchableOpacity, Alert } from 'react-native';\nimport tailwind from 'tailwind-react-native-classnames';\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete'\nimport { Ionicons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst SearchBar = ({ setCity, city }) => {\n    \n    return (\n        <View style={tailwind`flex-row mt-3 px-4 pb-3 border-b border-gray-100 border-b-2`}>\n            <GooglePlacesAutocomplete\n                placeholder={city || \"Search\"}\n                defaultValue=\"Paris\" \n                nearbyPlacesAPI=\"GooglePlacesSearch\"\n                debounce={400}\n                onPress={data => setCity(data.structured_formatting.main_text)}\n                minLength={2}\n                fetchDetails={true}\n                returnKeyType={\"search\"}\n                onFail={error => Alert.alert('Worning', error)}\n                query={{\n                    key: \"\",\n                    language: 'fr',\n                }}\n                styles={{\n                    container: {\n                        flex: 1,\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                    },\n                    textInput: {\n                        fontSize: 15,\n                        fontWeight: '700',\n                        backgroundColor: '#F3F4F6',\n                        marginTop: 4\n                    },\n                    textInputContainer: {\n                        backgroundColor: '#F3F4F6',\n                        borderRadius: 40,\n                        justifyContent: 'center',\n                    }\n                }}\n                enablePoweredByContainer={false}\n                renderLeftButton={() => (\n                    <View style={tailwind`self-center ml-3`}>\n                        <Ionicons name=\"ios-location-sharp\" size={24} color=\"#FF3C6E\" />\n                    </View>\n                )}\n                renderRightButton={() => (\n                    <TouchableOpacity style={tailwind`self-center ml-3 flex-row items-center bg-white py-2 px-3 rounded-full mr-3`}>\n                        <MaterialCommunityIcons name=\"clock-time-four\" size={13} color=\"#FF3C6E\" />\n                        <Text style={tailwind`ml-1`}>Search</Text>\n                    </TouchableOpacity>\n                )}\n            />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({})\n\nexport default SearchBar;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAE1B,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,SAASC,wBAAwB,QAAQ,yCAAyC;AAClF,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,sBAAsB,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5D,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAA0B;EAAA,IAApBC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EAE9B,OACIN,IAAA,CAACV,IAAI;IAACiB,KAAK,EAAEZ,QAAS,6DAA6D;IAAAa,QAAA,EAC/ER,IAAA,CAACJ,wBAAwB;MACrBa,WAAW,EAAEH,IAAI,IAAI,QAAS;MAC9BI,YAAY,EAAC,OAAO;MACpBC,eAAe,EAAC,oBAAoB;MACpCC,QAAQ,EAAE,GAAI;MACdC,OAAO,EAAE,SAAAA,QAAAC,IAAI;QAAA,OAAIT,OAAO,CAACS,IAAI,CAACC,qBAAqB,CAACC,SAAS,CAAC;MAAA,CAAC;MAC/DC,SAAS,EAAE,CAAE;MACbC,YAAY,EAAE,IAAK;MACnBC,aAAa,EAAE,QAAS;MACxBC,MAAM,EAAE,SAAAA,OAAAC,KAAK;QAAA,OAAI3B,KAAK,CAAC4B,KAAK,CAAC,SAAS,EAAED,KAAK,CAAC;MAAA,CAAC;MAC/CE,KAAK,EAAE;QACHC,GAAG,EAAE,EAAE;QACPC,QAAQ,EAAE;MACd,CAAE;MACFC,MAAM,EAAE;QACJC,SAAS,EAAE;UACPC,IAAI,EAAE,CAAC;UACPC,cAAc,EAAE,QAAQ;UACxBC,UAAU,EAAE;QAChB,CAAC;QACDC,SAAS,EAAE;UACPC,QAAQ,EAAE,EAAE;UACZC,UAAU,EAAE,KAAK;UACjBC,eAAe,EAAE,SAAS;UAC1BC,SAAS,EAAE;QACf,CAAC;QACDC,kBAAkB,EAAE;UAChBF,eAAe,EAAE,SAAS;UAC1BG,YAAY,EAAE,EAAE;UAChBR,cAAc,EAAE;QACpB;MACJ,CAAE;MACFS,wBAAwB,EAAE,KAAM;MAChCC,gBAAgB,EAAE,SAAAA,iBAAA;QAAA,OACdvC,IAAA,CAACV,IAAI;UAACiB,KAAK,EAAEZ,QAAS,kBAAkB;UAAAa,QAAA,EACpCR,IAAA,CAACH,QAAQ;YAAC2C,IAAI,EAAC,oBAAoB;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS,CAAE;QAAC,CAC9D,CAAC;MAAA,CACT;MACFC,iBAAiB,EAAE,SAAAA,kBAAA;QAAA,OACfzC,KAAA,CAACT,gBAAgB;UAACc,KAAK,EAAEZ,QAAS,6EAA6E;UAAAa,QAAA,GAC3GR,IAAA,CAACF,sBAAsB;YAAC0C,IAAI,EAAC,iBAAiB;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS,CAAE,CAAC,EAC3E1C,IAAA,CAACR,IAAI;YAACe,KAAK,EAAEZ,QAAS,MAAM;YAAAa,QAAA,EAAC;UAAM,CAAM,CAAC;QAAA,CAC5B,CAAC;MAAA;IACrB,CACL;EAAC,CACA,CAAC;AAEf,CAAC;AAED,IAAMkB,MAAM,GAAGnC,UAAU,CAACqD,MAAM,CAAC,CAAC,CAAC,CAAC;AAEpC,eAAezC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}