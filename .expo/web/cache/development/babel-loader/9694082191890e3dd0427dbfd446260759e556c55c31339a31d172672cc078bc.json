{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useStripe } from '@stripe/stripe-react-native';\nimport PaymentScreen from \"../components/PaymentScreen\";\nimport { STRIPE_API_URL } from \"../configs/apiEndpoints\";\nimport colors from \"../configs/colors\";\nimport PaymentButton from \"../components/PaymentButton\";\nimport tailwind from 'tailwind-react-native-classnames';\nimport AppHead from \"../components/AppHead\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigation } from '@react-navigation/core';\nimport { selectUser } from \"../redux/slices/authSlice\";\nimport { selectCartItems, updateBusket } from \"../redux/slices/basketSlice\";\nimport { db, timestamp } from \"../configs/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar CheckoutScreen = function CheckoutScreen() {\n  var _useStripe = useStripe(),\n    initPaymentSheet = _useStripe.initPaymentSheet,\n    presentPaymentSheet = _useStripe.presentPaymentSheet,\n    confirmPaymentSheetPayment = _useStripe.confirmPaymentSheetPayment;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    paymentSheetEnabled = _useState2[0],\n    setPaymentSheetEnabled = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    paymentMethod = _useState6[0],\n    setPaymentMethod = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loadingOrder = _useState8[0],\n    setLoadingOrder = _useState8[1];\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  var allCartItems = useSelector(selectCartItems);\n  var user = useSelector(selectUser);\n  var fetchPaymentSheetParams = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var response = yield fetch(`${STRIPE_API_URL}/payment-sheet`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var _yield$response$json = yield response.json(),\n        paymentIntent = _yield$response$json.paymentIntent,\n        ephemeralKey = _yield$response$json.ephemeralKey,\n        customer = _yield$response$json.customer;\n      return {\n        paymentIntent: paymentIntent,\n        ephemeralKey: ephemeralKey,\n        customer: customer\n      };\n    });\n    return function fetchPaymentSheetParams() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var initialisePaymentSheet = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var _yield$fetchPaymentSh = yield fetchPaymentSheetParams(),\n          paymentIntent = _yield$fetchPaymentSh.paymentIntent,\n          ephemeralKey = _yield$fetchPaymentSh.ephemeralKey,\n          customer = _yield$fetchPaymentSh.customer;\n        var _yield$initPaymentShe = yield initPaymentSheet({\n            customerId: customer,\n            customerEphemeralKeySecret: ephemeralKey,\n            paymentIntentClientSecret: paymentIntent,\n            customFlow: true,\n            merchantDisplayName: 'Example Inc.',\n            applePay: false,\n            merchantCountryCode: 'US',\n            style: 'alwaysDark',\n            googlePay: false,\n            testEnv: true\n          }),\n          error = _yield$initPaymentShe.error,\n          paymentOption = _yield$initPaymentShe.paymentOption;\n        if (!error) {\n          setPaymentSheetEnabled(true);\n        }\n        if (paymentOption) {\n          setPaymentMethod(paymentOption);\n        }\n      } catch (error) {\n        console.log('error', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function initialisePaymentSheet() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var choosePaymentOption = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var _yield$presentPayment = yield presentPaymentSheet({\n          confirmPayment: false\n        }),\n        error = _yield$presentPayment.error,\n        paymentOption = _yield$presentPayment.paymentOption;\n      if (error) {\n        console.log('error', error);\n      } else if (paymentOption) {\n        setPaymentMethod({\n          label: paymentOption == null ? void 0 : paymentOption.label,\n          image: paymentOption == null ? void 0 : paymentOption.image\n        });\n      } else {\n        setPaymentMethod(null);\n      }\n    });\n    return function choosePaymentOption() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var onPressBuy = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setLoading(true);\n      var _yield$confirmPayment = yield confirmPaymentSheetPayment(),\n        error = _yield$confirmPayment.error;\n      if (error) {\n        Alert.alert('Payment faild', `Error code: ${error.code}`, error.message);\n      } else {\n        addOrder();\n        setPaymentSheetEnabled(false);\n      }\n      setLoading(false);\n    });\n    return function onPressBuy() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    initialisePaymentSheet();\n  }, []);\n  var addOrder = function addOrder() {\n    setLoadingOrder(true);\n    db.collection(\"orders\").add({\n      items: allCartItems,\n      email: user == null ? void 0 : user.email,\n      timestamp: timestamp\n    }).then(function () {\n      setTimeout(function () {\n        setLoadingOrder(false);\n        dispatch(updateBusket([]));\n        navigation.navigate(\"SuccessScreen\");\n      }, 1500);\n    }).catch(function (e) {\n      setLoadingOrder(false);\n      Alert.alert('Error', e.message);\n    });\n  };\n  return _jsx(_Fragment, {\n    children: loadingOrder ? _jsxs(View, {\n      style: tailwind`h-full bg-white items-center justify-center`,\n      children: [_jsx(Text, {\n        style: tailwind`font-bold text-lg w-3/4 text-center`,\n        children: \"Congratulations!\\nPayment successfully done!\"\n      }), _jsx(Text, {\n        style: tailwind`mt-4`,\n        children: \"Creating your order. please wait...\"\n      }), _jsx(Image, {\n        source: require(\"../assets/images/loaging.gif\"),\n        style: tailwind`w-72 h-72`\n      })]\n    }) : _jsx(_Fragment, {\n      children: _jsxs(PaymentScreen, {\n        children: [_jsx(AppHead, {\n          title: `Checkout`\n        }), _jsx(View, {\n          style: tailwind`mt-5`,\n          children: _jsx(PaymentButton, {\n            variant: \"primary\",\n            loading: loading,\n            title: paymentMethod ? _jsxs(View, {\n              style: styles.row,\n              children: [_jsx(Image, {\n                source: {\n                  uri: `data:image/png;base64,${paymentMethod == null ? void 0 : paymentMethod.image}`\n                },\n                style: styles.image\n              }), _jsx(Text, {\n                style: styles.text,\n                children: paymentMethod == null ? void 0 : paymentMethod.label\n              })]\n            }) : 'Choose payment method',\n            disabled: !paymentSheetEnabled,\n            onPress: choosePaymentOption\n          })\n        }), _jsx(View, {\n          style: styles.section,\n          children: _jsx(PaymentButton, {\n            variant: \"primary\",\n            loading: loading,\n            disabled: !paymentMethod || !paymentSheetEnabled,\n            title: \"Pay\",\n            onPress: onPressBuy\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  flex: {\n    flex: 1\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  section: {\n    marginTop: 20\n  },\n  title: {\n    fontSize: 18,\n    marginBottom: 20,\n    fontWeight: 'bold'\n  },\n  paymentMethodTitle: {\n    color: colors.slate,\n    fontWeight: 'bold'\n  },\n  image: {\n    width: 26,\n    height: 20\n  },\n  text: {\n    color: colors.white,\n    fontSize: 16,\n    fontWeight: '600',\n    marginLeft: 12\n  }\n});\nexport default CheckoutScreen;","map":{"version":3,"names":["React","useEffect","useState","Alert","Image","StyleSheet","Text","View","useStripe","PaymentScreen","STRIPE_API_URL","colors","PaymentButton","tailwind","AppHead","useDispatch","useSelector","useNavigation","selectUser","selectCartItems","updateBusket","db","timestamp","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CheckoutScreen","_useStripe","initPaymentSheet","presentPaymentSheet","confirmPaymentSheetPayment","_useState","_useState2","_slicedToArray","paymentSheetEnabled","setPaymentSheetEnabled","_useState3","_useState4","loading","setLoading","_useState5","_useState6","paymentMethod","setPaymentMethod","_useState7","_useState8","loadingOrder","setLoadingOrder","navigation","dispatch","allCartItems","user","fetchPaymentSheetParams","_ref","_asyncToGenerator","response","fetch","method","headers","_yield$response$json","json","paymentIntent","ephemeralKey","customer","apply","arguments","initialisePaymentSheet","_ref2","_yield$fetchPaymentSh","_yield$initPaymentShe","customerId","customerEphemeralKeySecret","paymentIntentClientSecret","customFlow","merchantDisplayName","applePay","merchantCountryCode","style","googlePay","testEnv","error","paymentOption","console","log","choosePaymentOption","_ref3","_yield$presentPayment","confirmPayment","label","image","onPressBuy","_ref4","_yield$confirmPayment","alert","code","message","addOrder","collection","add","items","email","then","setTimeout","navigate","catch","e","children","source","require","title","variant","styles","row","uri","text","disabled","onPress","section","create","flex","flexDirection","alignItems","marginTop","fontSize","marginBottom","fontWeight","paymentMethodTitle","color","slate","width","height","white","marginLeft"],"sources":["/home/armel/workspaceSchool/Payfood_App/src/screens/CheckoutScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Alert, Image, StyleSheet, Text, View } from 'react-native';\nimport { useStripe } from '@stripe/stripe-react-native';\nimport PaymentScreen from '../components/PaymentScreen';\nimport { STRIPE_API_URL } from '../configs/apiEndpoints';\nimport colors from '../configs/colors';\nimport PaymentButton from '../components/PaymentButton';\nimport tailwind from 'tailwind-react-native-classnames';\nimport AppHead from '../components/AppHead';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigation } from '@react-navigation/core';\nimport { selectUser } from '../redux/slices/authSlice';\nimport { selectCartItems, updateBusket } from '../redux/slices/basketSlice';\nimport { db, timestamp } from '../configs/firebase';\n\nconst CheckoutScreen = () => {\n  const {\n    initPaymentSheet,\n    presentPaymentSheet,\n    confirmPaymentSheetPayment,\n  } = useStripe();\n  const [paymentSheetEnabled, setPaymentSheetEnabled] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [paymentMethod, setPaymentMethod] = useState(null);\n  const [loadingOrder, setLoadingOrder] = useState(false);\n  const navigation = useNavigation()\n  const dispatch = useDispatch()\n  const allCartItems = useSelector(selectCartItems)\n  const user = useSelector(selectUser)\n\n  const fetchPaymentSheetParams = async () => {\n    const response = await fetch(`${STRIPE_API_URL}/payment-sheet`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const { paymentIntent, ephemeralKey, customer } = await response.json();\n\n    return {\n      paymentIntent,\n      ephemeralKey,\n      customer,\n    };\n  };\n\n  const initialisePaymentSheet = async () => {\n    setLoading(true);\n\n    try {\n      const {\n        paymentIntent,\n        ephemeralKey,\n        customer,\n      } = await fetchPaymentSheetParams();\n\n      const { error, paymentOption } = await initPaymentSheet({\n        customerId: customer,\n        customerEphemeralKeySecret: ephemeralKey,\n        paymentIntentClientSecret: paymentIntent,\n        customFlow: true,\n        merchantDisplayName: 'Example Inc.',\n        applePay: false,\n        merchantCountryCode: 'US',\n        style: 'alwaysDark',\n        googlePay: false,\n        testEnv: true,\n      });\n\n      if (!error) {\n        setPaymentSheetEnabled(true);\n      }\n      if (paymentOption) {\n        setPaymentMethod(paymentOption);\n      }\n    } catch (error) {\n      console.log('error', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const choosePaymentOption = async () => {\n    const { error, paymentOption } = await presentPaymentSheet({\n      confirmPayment: false,\n    });\n\n    if (error) {\n      console.log('error', error);\n    } else if (paymentOption) {\n      setPaymentMethod({\n        label: paymentOption?.label,\n        image: paymentOption?.image,\n      });\n    } else {\n      setPaymentMethod(null);\n    }\n  };\n\n  const onPressBuy = async () => {\n    setLoading(true);\n    const { error } = await confirmPaymentSheetPayment();\n\n    if (error) {\n      Alert.alert('Payment faild', `Error code: ${error.code}`, error.message);\n    } else {\n      // Success;\n      addOrder()\n      setPaymentSheetEnabled(false);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    // In your app’s checkout, make a network request to the backend and initialize PaymentSheet.\n    // To reduce loading time, make this request before the Checkout button is tapped, e.g. when the screen is loaded.\n    initialisePaymentSheet();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const addOrder = () => {\n    setLoadingOrder(true);\n    db.collection(\"orders\")\n      .add({\n        items: allCartItems,\n        email: user?.email,\n        timestamp\n      })\n      .then(() => {\n        setTimeout(() => {\n          setLoadingOrder(false);\n          dispatch(updateBusket([]))\n          navigation.navigate(\"SuccessScreen\");\n        }, 1500)\n      })\n      .catch(e => {\n        setLoadingOrder(false)\n        Alert.alert('Error', e.message)\n      })\n  }\n\n  return (\n    <>\n      {loadingOrder ? (\n        <View style={tailwind`h-full bg-white items-center justify-center`}>\n          <Text style={tailwind`font-bold text-lg w-3/4 text-center`}>{\"Congratulations!\\nPayment successfully done!\"}</Text>\n          <Text style={tailwind`mt-4`}>Creating your order. please wait...</Text>\n          <Image source={require('../assets/images/loaging.gif')} style={tailwind`w-72 h-72`} />\n        </View>\n      ) : (\n        <>\n          <PaymentScreen>\n            <AppHead title={`Checkout`} />\n            <View style={tailwind`mt-5`}>\n              <PaymentButton\n                variant=\"primary\"\n                loading={loading}\n                title={\n                  paymentMethod ? (\n                    <View style={styles.row}>\n                      <Image\n                        source={{\n                          uri: `data:image/png;base64,${paymentMethod?.image}`,\n                        }}\n                        style={styles.image}\n                      />\n                      <Text style={styles.text}>{paymentMethod?.label}</Text>\n                    </View>\n                  ) : (\n                    'Choose payment method'\n                  )\n                }\n                disabled={!paymentSheetEnabled}\n                onPress={choosePaymentOption}\n              />\n            </View>\n\n            <View style={styles.section}>\n              <PaymentButton\n                variant=\"primary\"\n                loading={loading}\n                disabled={!paymentMethod || !paymentSheetEnabled}\n                title=\"Pay\"\n                onPress={onPressBuy}\n\n              />\n            </View>\n          </PaymentScreen>\n        </>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flex: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  section: {\n    marginTop: 20,\n  },\n  title: {\n    fontSize: 18,\n    marginBottom: 20,\n    fontWeight: 'bold',\n  },\n  paymentMethodTitle: {\n    color: colors.slate,\n    fontWeight: 'bold',\n  },\n  image: {\n    width: 26,\n    height: 20,\n  },\n  text: {\n    color: colors.white,\n    fontSize: 16,\n    fontWeight: '600',\n    marginLeft: 12,\n  },\n});\n\n\nexport default CheckoutScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}