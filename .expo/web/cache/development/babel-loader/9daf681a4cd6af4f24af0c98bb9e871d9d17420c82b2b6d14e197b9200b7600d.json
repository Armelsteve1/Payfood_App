{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport HeaderTabs from \"../components/HeaderTabs\";\nimport Screen from \"../components/Screen\";\nimport Categories from \"../components/Categories\";\nimport SearchBar from \"../components/SearchBar\";\nimport RestaurantItem from \"../components/RestaurantItem\";\nimport tailwind from 'tailwind-react-native-classnames';\nimport { localRestaurants } from \"../data/localRestaurants\";\nimport colors from \"../configs/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar YELP_API_KEY = \"\";\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState(localRestaurants),\n    _useState2 = _slicedToArray(_useState, 2),\n    restaurantData = _useState2[0],\n    setRestaurantData = _useState2[1];\n  var _useState3 = useState(\"San Francisco\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    city = _useState4[0],\n    setCity = _useState4[1];\n  var _useState5 = useState(\"Delivery\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activeTab = _useState6[0],\n    setActiveTab = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var getRestaurantsFromYelp = function getRestaurantsFromYelp() {\n    var yelpUrl = `https://api.yelp.com/v3/businesses/search?term=restaurants&location=${city}`;\n    var apiOptions = {\n      headers: {\n        Authorization: `Bearer ${YELP_API_KEY}`\n      }\n    };\n    setLoading(true);\n    return fetch(yelpUrl, apiOptions).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      var _json$businesses;\n      setLoading(false);\n      if (json.error) return Alert.alert('Sorry', json.error.description);\n      setRestaurantData(json == null ? void 0 : (_json$businesses = json.businesses) == null ? void 0 : _json$businesses.filter(function (business) {\n        return business.transactions.includes(activeTab.toLowerCase());\n      }));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n  useEffect(function () {\n    return;\n    getRestaurantsFromYelp();\n  }, [city, activeTab]);\n  return _jsxs(Screen, {\n    style: tailwind`bg-white flex-1`,\n    children: [_jsx(HeaderTabs, {\n      activeTab: activeTab,\n      setActiveTab: setActiveTab\n    }), _jsx(SearchBar, {\n      setCity: setCity,\n      city: city\n    }), _jsxs(ScrollView, {\n      style: tailwind`flex-1`,\n      showsVerticalScrollIndicator: false,\n      children: [_jsx(Categories, {}), loading && _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: colors.primary,\n        style: tailwind`mt-2 mb-6`\n      }), _jsx(RestaurantItem, {\n        restaurantData: restaurantData\n      })]\n    })]\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","ScrollView","Alert","ActivityIndicator","HeaderTabs","Screen","Categories","SearchBar","RestaurantItem","tailwind","localRestaurants","colors","jsx","_jsx","jsxs","_jsxs","YELP_API_KEY","HomeScreen","_useState","_useState2","_slicedToArray","restaurantData","setRestaurantData","_useState3","_useState4","city","setCity","_useState5","_useState6","activeTab","setActiveTab","_useState7","_useState8","loading","setLoading","getRestaurantsFromYelp","yelpUrl","apiOptions","headers","Authorization","fetch","then","res","json","_json$businesses","error","alert","description","businesses","filter","business","transactions","includes","toLowerCase","catch","err","console","log","style","children","showsVerticalScrollIndicator","size","color","primary"],"sources":["/home/armel/workspaceSchool/Payfood_App/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ScrollView, Alert, ActivityIndicator } from 'react-native';\nimport HeaderTabs from '../components/HeaderTabs';\nimport Screen from '../components/Screen'\nimport Categories from '../components/Categories'\nimport SearchBar from '../components/SearchBar'\nimport RestaurantItem from '../components/RestaurantItem'\nimport tailwind from 'tailwind-react-native-classnames';\nimport { localRestaurants } from '../data/localRestaurants';\nimport colors from '../configs/colors'\n\nconst YELP_API_KEY = \"\";\n\nconst HomeScreen = () => {\n    const [restaurantData, setRestaurantData] = useState(localRestaurants)\n    const [city, setCity] = useState(\"San Francisco\")\n    const [activeTab, setActiveTab] = useState(\"Delivery\");\n    const [loading, setLoading] = useState(false)\n\n    const getRestaurantsFromYelp = () => {\n        const yelpUrl = `https://api.yelp.com/v3/businesses/search?term=restaurants&location=${city}`;\n\n        const apiOptions = {\n            headers: {\n                Authorization: `Bearer ${YELP_API_KEY}`,\n            },\n        };\n        setLoading(true)\n        return fetch(yelpUrl, apiOptions)\n            .then((res) => res.json())\n            .then((json) => {\n                setLoading(false)\n                if (json.error) return Alert.alert('Sorry', json.error.description);\n                setRestaurantData(\n                    json?.businesses?.filter((business) =>\n                        business.transactions.includes(activeTab.toLowerCase())\n                    )\n                )\n            })\n            .catch((err) => console.log(err));\n    };\n\n    useEffect(() => {\n        return // Remove return after adding Yelp API key\n        getRestaurantsFromYelp();\n    }, [city, activeTab]);\n\n\n    return (\n        <Screen style={tailwind`bg-white flex-1`}>\n            <HeaderTabs activeTab={activeTab} setActiveTab={setActiveTab} />\n            <SearchBar setCity={setCity} city={city} />\n            <ScrollView style={tailwind`flex-1`} showsVerticalScrollIndicator={false}>\n                <Categories />\n                {loading && <ActivityIndicator size=\"large\" color={colors.primary} style={tailwind`mt-2 mb-6`} />}\n                <RestaurantItem restaurantData={restaurantData} />\n            </ScrollView>\n        </Screen>\n    );\n}\n\nexport default HomeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}