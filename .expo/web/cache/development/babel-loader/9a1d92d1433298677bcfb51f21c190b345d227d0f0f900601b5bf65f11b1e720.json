{"ast":null,"code":"import React from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppForm from \"../components/forms/AppForm\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../configs/colors\";\nimport * as yup from \"yup\";\nimport AppFormFeilds from \"../components/forms/AppFormFeilds\";\nimport AppSubmitButton from \"../components/forms/AppSubmitButton\";\nimport { auth } from \"../configs/firebase\";\nimport tailwind from 'tailwind-react-native-classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ValidationSchema = yup.object().shape({\n  name: yup.string().min(3, function (_ref) {\n    var min = _ref.min;\n    return `Name must be at least ${min} characters`;\n  }).max(50, function (_ref2) {\n    var max = _ref2.max;\n    return `Name must be less then ${max} characters`;\n  }).required(\"Name is Required\"),\n  email: yup.string().email(\"Please enter valid email\").required(\"Email Address is Required\"),\n  password: yup.string().min(8, function (_ref3) {\n    var min = _ref3.min;\n    return `Password must be at least ${min} characters`;\n  }).required(\"Password is required\")\n});\nfunction SignupScreen(_ref4) {\n  var navigation = _ref4.navigation;\n  var signUpUser = function signUpUser(_ref5) {\n    var name = _ref5.name,\n      email = _ref5.email,\n      password = _ref5.password;\n    auth.createUserWithEmailAndPassword(email, password).then(function (result) {\n      result.user.updateProfile({\n        displayName: name\n      }).then(function () {}).catch(function (err) {\n        Alert.alert(\"Error\", err.message);\n      });\n    }).catch(function (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        Alert.alert(\"Error\", \"That email address is already in use!\");\n      }\n      if (error.code === \"auth/invalid-email\") {\n        Alert.alert(\"Error\", \"That email address is invalid!\");\n      }\n      Alert.alert('ERROR: ', error.message);\n    });\n  };\n  return _jsx(Screen, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.wrapper,\n      children: [_jsx(View, {\n        style: tailwind`py-4 rounded-2xl`,\n        children: _jsx(Image, {\n          style: styles.logo,\n          source: require(\"../assets/logo.png\")\n        })\n      }), _jsxs(Text, {\n        style: styles.wellcomeTo,\n        children: [\"Join to Uber \", _jsx(Text, {\n          style: styles.brand,\n          children: \"Eats\"\n        })]\n      }), _jsx(View, {\n        style: styles.form,\n        children: _jsxs(AppForm, {\n          initialValues: {\n            name: \"\",\n            email: \"\",\n            password: \"\"\n          },\n          validationSchema: ValidationSchema,\n          onSubmit: function onSubmit(values) {\n            return signUpUser(values);\n          },\n          children: [_jsx(AppFormFeilds, {\n            name: \"name\",\n            placeholder: \"Your name\"\n          }), _jsx(AppFormFeilds, {\n            name: \"email\",\n            placeholder: \"Your email\",\n            keyboardType: \"email-address\"\n          }), _jsx(AppFormFeilds, {\n            name: \"password\",\n            placeholder: \"Password\",\n            autoCompleteType: \"off\",\n            password: true\n          }), _jsx(AppSubmitButton, {\n            title: \"Sign Up\"\n          })]\n        })\n      }), _jsxs(Text, {\n        style: styles.join,\n        children: [\"Already a member?\", \" \", _jsx(Text, {\n          onPress: function onPress() {\n            return navigation.navigate(\"UserLogin\");\n          },\n          style: {\n            color: colors.primary\n          },\n          children: \"Logn In\"\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.white,\n    justifyContent: 'center'\n  },\n  wrapper: {\n    paddingHorizontal: 20\n  },\n  logo: {\n    height: 160,\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    marginTop: 30\n  },\n  wellcomeTo: {\n    fontSize: 23,\n    fontWeight: \"700\",\n    color: colors.secondary,\n    marginTop: 20,\n    textAlign: \"center\"\n  },\n  brand: {\n    fontSize: 23,\n    color: colors.primary,\n    textAlign: \"center\",\n    fontWeight: \"500\"\n  },\n  form: {\n    marginTop: 10\n  },\n  join: {\n    marginTop: 16,\n    textAlign: \"center\",\n    color: colors.black\n  },\n  or: {\n    color: colors.gray,\n    textAlign: \"center\",\n    marginVertical: 20\n  }\n});\nexport default SignupScreen;","map":{"version":3,"names":["React","Alert","Image","StyleSheet","Text","View","AppForm","Screen","colors","yup","AppFormFeilds","AppSubmitButton","auth","tailwind","jsx","_jsx","jsxs","_jsxs","ValidationSchema","object","shape","name","string","min","_ref","max","_ref2","required","email","password","_ref3","SignupScreen","_ref4","navigation","signUpUser","_ref5","createUserWithEmailAndPassword","then","result","user","updateProfile","displayName","catch","err","alert","message","error","code","style","styles","container","children","wrapper","logo","source","require","wellcomeTo","brand","form","initialValues","validationSchema","onSubmit","values","placeholder","keyboardType","autoCompleteType","title","join","onPress","navigate","color","primary","create","backgroundColor","white","justifyContent","paddingHorizontal","height","resizeMode","alignSelf","marginTop","fontSize","fontWeight","secondary","textAlign","black","or","gray","marginVertical"],"sources":["/home/armel/workspaceSchool/Payfood_App/src/screens/SignupScreen.js"],"sourcesContent":["import React from \"react\";\nimport { Alert, Image, StyleSheet, Text, View } from \"react-native\";\nimport AppForm from \"../components/forms/AppForm\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../configs/colors\";\nimport * as yup from \"yup\";\nimport AppFormFeilds from \"../components/forms/AppFormFeilds\";\nimport AppSubmitButton from \"../components/forms/AppSubmitButton\";\nimport { auth } from \"../configs/firebase\";\nimport tailwind from 'tailwind-react-native-classnames';\n\nconst ValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, ({ min }) => `Name must be at least ${min} characters`)\n    .max(50, ({ max }) => `Name must be less then ${max} characters`)\n    .required(\"Name is Required\"),\n  email: yup\n    .string()\n    .email(\"Please enter valid email\")\n    .required(\"Email Address is Required\"),\n  password: yup\n    .string()\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\n    .required(\"Password is required\"),\n});\n\nfunction SignupScreen({ navigation }) {\n\n  const signUpUser = ({ name, email, password }) => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        result.user\n          .updateProfile({ displayName: name })\n          .then(() => {\n            // User account created & signed in!\n          })\n          .catch((err) => {\n            Alert.alert(\"Error\", err.message)\n          });\n      })\n      .catch((error) => {\n        if (error.code === \"auth/email-already-in-use\") {\n          Alert.alert(\"Error\", \"That email address is already in use!\")\n        }\n\n        if (error.code === \"auth/invalid-email\") {\n          Alert.alert(\"Error\", \"That email address is invalid!\")\n        }\n\n        Alert.alert('ERROR: ', error.message);\n      });\n  };\n\n  return (\n    <Screen style={styles.container}>\n      <View style={styles.wrapper}>\n        <View style={tailwind`py-4 rounded-2xl`}>\n          <Image style={styles.logo} source={require(\"../assets/logo.png\")} />\n        </View>\n        <Text style={styles.wellcomeTo}>\n          Join to Uber <Text style={styles.brand}>Eats</Text>\n        </Text>\n        <View style={styles.form}>\n          <AppForm\n            initialValues={{ name: \"\", email: \"\", password: \"\" }}\n            validationSchema={ValidationSchema}\n            onSubmit={(values) => signUpUser(values)}\n          >\n            <AppFormFeilds\n              name=\"name\"\n              placeholder=\"Your name\"\n            />\n            <AppFormFeilds\n              name=\"email\"\n              placeholder=\"Your email\"\n              keyboardType=\"email-address\"\n            />\n            <AppFormFeilds\n              name=\"password\"\n              placeholder=\"Password\"\n              autoCompleteType=\"off\"\n              password={true}\n            />\n            <AppSubmitButton title=\"Sign Up\" />\n          </AppForm>\n        </View>\n\n        <Text style={styles.join}>\n          Already a member?{\" \"}\n          <Text\n            onPress={() => navigation.navigate(\"UserLogin\")}\n            style={{ color: colors.primary }}\n          >\n            Logn In\n          </Text>\n        </Text>\n      </View>\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.white,\n    justifyContent: 'center'\n  },\n  wrapper: {\n    paddingHorizontal: 20,\n  },\n  logo: {\n    height: 160,\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    marginTop: 30,\n  },\n  wellcomeTo: {\n    fontSize: 23,\n    fontWeight: \"700\",\n    color: colors.secondary,\n    marginTop: 20,\n    textAlign: \"center\",\n  },\n  brand: {\n    fontSize: 23,\n    color: colors.primary,\n    textAlign: \"center\",\n    fontWeight: \"500\",\n  },\n  form: {\n    marginTop: 10,\n  },\n  join: {\n    marginTop: 16,\n    textAlign: \"center\",\n    color: colors.black,\n  },\n  or: {\n    color: colors.gray,\n    textAlign: \"center\",\n    marginVertical: 20,\n  },\n});\n\nexport default SignupScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}