{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { initStripe } from '@stripe/stripe-react-native';\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../configs/colors\";\nimport { fetchPublishableKey } from \"../utils/helpers\";\nimport tailwind from 'tailwind-react-native-classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PaymentScreen = function PaymentScreen(_ref) {\n  var children = _ref.children;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  useEffect(function () {\n    function initialize() {\n      return _initialize.apply(this, arguments);\n    }\n    function _initialize() {\n      _initialize = _asyncToGenerator(function* () {\n        var publishableKey = yield fetchPublishableKey();\n        if (publishableKey) {\n          yield initStripe({\n            publishableKey: publishableKey,\n            merchantIdentifier: 'merchant.com.stripe.react.native',\n            urlScheme: 'stripe-example',\n            setUrlSchemeOnAndroid: true\n          });\n          setLoading(false);\n        }\n      });\n      return _initialize.apply(this, arguments);\n    }\n    initialize();\n  }, []);\n  return loading ? _jsx(View, {\n    style: tailwind`flex-1 bg-white items-center justify-center`,\n    children: _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#000\"\n    })\n  }) : _jsxs(ScrollView, {\n    accessibilityLabel: \"payment-screen\",\n    style: styles.container,\n    keyboardShouldPersistTaps: \"handled\",\n    children: [children, _jsx(Text, {\n      style: {\n        opacity: 0\n      },\n      children: \"appium fix\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.white,\n    paddingTop: 20,\n    paddingHorizontal: 16\n  }\n});\nexport default PaymentScreen;","map":{"version":3,"names":["initStripe","React","useEffect","useState","ActivityIndicator","ScrollView","StyleSheet","Text","View","colors","fetchPublishableKey","tailwind","jsx","_jsx","jsxs","_jsxs","PaymentScreen","_ref","children","_useState","_useState2","_slicedToArray","loading","setLoading","initialize","_initialize","apply","arguments","_asyncToGenerator","publishableKey","merchantIdentifier","urlScheme","setUrlSchemeOnAndroid","style","size","color","accessibilityLabel","styles","container","keyboardShouldPersistTaps","opacity","create","flex","backgroundColor","white","paddingTop","paddingHorizontal"],"sources":["/home/armel/workspaceSchool/Payfood_App/src/components/PaymentScreen.js"],"sourcesContent":["import { initStripe } from '@stripe/stripe-react-native';\nimport React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, ScrollView, StyleSheet, Text, View } from 'react-native';\nimport colors from '../configs/colors';\nimport { fetchPublishableKey } from '../utils/helpers';\nimport tailwind from 'tailwind-react-native-classnames';\n\nconst PaymentScreen = ({ children }) => {\n\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function initialize() {\n            const publishableKey = await fetchPublishableKey();\n            if (publishableKey) {\n                await initStripe({\n                    publishableKey,\n                    merchantIdentifier: 'merchant.com.stripe.react.native',\n                    urlScheme: 'stripe-example',\n                    setUrlSchemeOnAndroid: true,\n                });\n                setLoading(false);\n            }\n        }\n        initialize();\n    }, []);\n    \n    return loading ? (\n        <View style={tailwind`flex-1 bg-white items-center justify-center`}>\n            <ActivityIndicator size=\"large\" color=\"#000\" />\n        </View>\n    ) : (\n        <ScrollView\n            accessibilityLabel=\"payment-screen\"\n            style={styles.container}\n            keyboardShouldPersistTaps=\"handled\">\n            {children}\n            <Text style={{ opacity: 0 }}>appium fix</Text>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: colors.white,\n        paddingTop: 20,\n        paddingHorizontal: 16,\n    },\n})\n\nexport default PaymentScreen;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,iBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,OAAOC,MAAM;AACb,SAASC,mBAAmB;AAC5B,OAAOC,QAAQ,MAAM,kCAAkC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAE7B,IAAAC,SAAA,GAA8BhB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1BlB,SAAS,CAAC,YAAM;IAAA,SACGsB,UAAUA,CAAA;MAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,YAAA;MAAAA,WAAA,GAAAG,iBAAA,CAAzB,aAA4B;QACxB,IAAMC,cAAc,SAASnB,mBAAmB,CAAC,CAAC;QAClD,IAAImB,cAAc,EAAE;UAChB,MAAM7B,UAAU,CAAC;YACb6B,cAAc,EAAdA,cAAc;YACdC,kBAAkB,EAAE,kCAAkC;YACtDC,SAAS,EAAE,gBAAgB;YAC3BC,qBAAqB,EAAE;UAC3B,CAAC,CAAC;UACFT,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ,CAAC;MAAA,OAAAE,WAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IACDH,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,OAAO,GACVT,IAAA,CAACL,IAAI;IAACyB,KAAK,EAAEtB,QAAS,6CAA6C;IAAAO,QAAA,EAC/DL,IAAA,CAACT,iBAAiB;MAAC8B,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;IAAM,CAAE;EAAC,CAC7C,CAAC,GAEPpB,KAAA,CAACV,UAAU;IACP+B,kBAAkB,EAAC,gBAAgB;IACnCH,KAAK,EAAEI,MAAM,CAACC,SAAU;IACxBC,yBAAyB,EAAC,SAAS;IAAArB,QAAA,GAClCA,QAAQ,EACTL,IAAA,CAACN,IAAI;MAAC0B,KAAK,EAAE;QAAEO,OAAO,EAAE;MAAE,CAAE;MAAAtB,QAAA,EAAC;IAAU,CAAM,CAAC;EAAA,CACtC,CACf;AACL,CAAC;AAED,IAAMmB,MAAM,GAAG/B,UAAU,CAACmC,MAAM,CAAC;EAC7BH,SAAS,EAAE;IACPI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAElC,MAAM,CAACmC,KAAK;IAC7BC,UAAU,EAAE,EAAE;IACdC,iBAAiB,EAAE;EACvB;AACJ,CAAC,CAAC;AAEF,eAAe9B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}