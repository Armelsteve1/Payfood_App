{"ast":null,"code":"import React from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppForm from \"../components/forms/AppForm\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../configs/colors\";\nimport * as yup from \"yup\";\nimport AppFormFeilds from \"../components/forms/AppFormFeilds\";\nimport AppSubmitButton from \"../components/forms/AppSubmitButton\";\nimport { auth } from \"../configs/firebase\";\nimport tailwind from 'tailwind-react-native-classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar loginValidationSchema = yup.object().shape({\n  email: yup.string().email(\"Please enter valid email\").required(\"Email Address is Required\"),\n  password: yup.string().min(8, function (_ref) {\n    var min = _ref.min;\n    return `Password must be at least ${min} characters`;\n  }).required(\"Password is required\")\n});\nfunction LoginScreenUser(_ref2) {\n  var navigation = _ref2.navigation;\n  var LoginUser = function LoginUser(_ref3) {\n    var email = _ref3.email,\n      password = _ref3.password;\n    auth.signInWithEmailAndPassword(email, password).catch(function (error) {\n      if (error.code === \"auth/invalid-password\") {\n        Alert.alert(\"Error\", \"Invalid password!\");\n      }\n      if (error.code === \"auth/invalid-email\") {\n        Alert.alert(\"Error\", \"That email address is invalid!\");\n      }\n      Alert.alert('ERROR: ', error.message);\n    });\n  };\n  return _jsx(Screen, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.wrapper,\n      children: [_jsx(View, {\n        style: tailwind`py-4 rounded-2xl`,\n        children: _jsx(Image, {\n          style: styles.logo,\n          source: require(\"../assets/logo.png\")\n        })\n      }), _jsxs(Text, {\n        style: styles.wellcomeTo,\n        children: [\"Login to Uber \", _jsx(Text, {\n          style: styles.brand,\n          children: \"Eats\"\n        })]\n      }), _jsx(View, {\n        style: styles.form,\n        children: _jsxs(AppForm, {\n          initialValues: {\n            email: \"\",\n            password: \"\"\n          },\n          validationSchema: loginValidationSchema,\n          onSubmit: function onSubmit(values) {\n            return LoginUser(values);\n          },\n          children: [_jsx(AppFormFeilds, {\n            name: \"email\",\n            placeholder: \"Your email\",\n            keyboardType: \"email-address\"\n          }), _jsx(AppFormFeilds, {\n            name: \"password\",\n            placeholder: \"Password\",\n            autoCompleteType: \"off\",\n            password: true\n          }), _jsx(AppSubmitButton, {\n            title: \"Login\"\n          })]\n        })\n      }), _jsxs(Text, {\n        style: styles.join,\n        children: [\"Not a member?\", \" \", _jsx(Text, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Signup\");\n          },\n          style: {\n            color: colors.primary\n          },\n          children: \"Sign Up\"\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.white,\n    justifyContent: 'center'\n  },\n  wrapper: {\n    paddingHorizontal: 20\n  },\n  logo: {\n    height: 160,\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    marginTop: 30\n  },\n  wellcomeTo: {\n    fontSize: 23,\n    fontWeight: \"700\",\n    color: colors.secondary,\n    marginTop: 20,\n    textAlign: \"center\"\n  },\n  brand: {\n    fontSize: 23,\n    color: colors.primary,\n    textAlign: \"center\",\n    fontWeight: \"500\"\n  },\n  form: {\n    marginTop: 10\n  },\n  join: {\n    marginTop: 16,\n    textAlign: \"center\",\n    color: colors.black\n  },\n  or: {\n    color: colors.gray,\n    textAlign: \"center\",\n    marginVertical: 20\n  }\n});\nexport default LoginScreenUser;","map":{"version":3,"names":["React","Alert","Image","StyleSheet","Text","View","AppForm","Screen","colors","yup","AppFormFeilds","AppSubmitButton","auth","tailwind","jsx","_jsx","jsxs","_jsxs","loginValidationSchema","object","shape","email","string","required","password","min","_ref","LoginScreenUser","_ref2","navigation","LoginUser","_ref3","signInWithEmailAndPassword","catch","error","code","alert","message","style","styles","container","children","wrapper","logo","source","require","wellcomeTo","brand","form","initialValues","validationSchema","onSubmit","values","name","placeholder","keyboardType","autoCompleteType","title","join","onPress","navigate","color","primary","create","backgroundColor","white","justifyContent","paddingHorizontal","height","resizeMode","alignSelf","marginTop","fontSize","fontWeight","secondary","textAlign","black","or","gray","marginVertical"],"sources":["/home/armel/workspaceSchool/Payfood_App/src/screens/LoginScreenUser.js"],"sourcesContent":["import React from \"react\";\nimport { Alert, Image, StyleSheet, Text, View } from \"react-native\";\nimport AppForm from \"../components/forms/AppForm\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../configs/colors\";\nimport * as yup from \"yup\";\nimport AppFormFeilds from \"../components/forms/AppFormFeilds\";\nimport AppSubmitButton from \"../components/forms/AppSubmitButton\";\nimport { auth } from \"../configs/firebase\";\nimport tailwind from 'tailwind-react-native-classnames';\n\nconst loginValidationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Please enter valid email\")\n    .required(\"Email Address is Required\"),\n  password: yup\n    .string()\n    .min(8, ({ min }) => `Password must be at least ${min} characters`)\n    .required(\"Password is required\"),\n});\n\nfunction LoginScreenUser({ navigation }) {\n\n  const LoginUser = ({ email, password }) => {\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => {\n        if (error.code === \"auth/invalid-password\") {\n          Alert.alert(\"Error\", \"Invalid password!\")\n        }\n        if (error.code === \"auth/invalid-email\") {\n          Alert.alert(\"Error\", \"That email address is invalid!\")\n        }\n        Alert.alert('ERROR: ', error.message);\n      });\n  };\n\n  return (\n    <Screen style={styles.container}>\n      <View style={styles.wrapper}>\n        <View style={tailwind`py-4 rounded-2xl`}>\n          <Image style={styles.logo} source={require(\"../assets/logo.png\")} />\n        </View>\n        <Text style={styles.wellcomeTo}>\n          Login to Uber <Text style={styles.brand}>Eats</Text>\n        </Text>\n        <View style={styles.form}>\n          <AppForm\n            initialValues={{ email: \"\", password: \"\" }}\n            validationSchema={loginValidationSchema}\n            onSubmit={(values) => LoginUser(values)}\n          >\n            <AppFormFeilds\n              name=\"email\"\n              placeholder=\"Your email\"\n              keyboardType=\"email-address\"\n            />\n            <AppFormFeilds\n              name=\"password\"\n              placeholder=\"Password\"\n              autoCompleteType=\"off\"\n              password={true}\n            />\n            <AppSubmitButton title=\"Login\" />\n          </AppForm>\n        </View>\n\n        <Text style={styles.join}>\n          Not a member?{\" \"}\n          <Text\n            onPress={() => navigation.navigate(\"Signup\")}\n            style={{ color: colors.primary }}\n          >\n            Sign Up\n          </Text>\n        </Text>\n      </View>\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.white,\n    justifyContent: 'center'\n  },\n  wrapper: {\n    paddingHorizontal: 20,\n  },\n  logo: {\n    height: 160,\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    marginTop: 30,\n  },\n  wellcomeTo: {\n    fontSize: 23,\n    fontWeight: \"700\",\n    color: colors.secondary,\n    marginTop: 20,\n    textAlign: \"center\",\n  },\n  brand: {\n    fontSize: 23,\n    color: colors.primary,\n    textAlign: \"center\",\n    fontWeight: \"500\",\n  },\n  form: {\n    marginTop: 10,\n  },\n  join: {\n    marginTop: 16,\n    textAlign: \"center\",\n    color: colors.black,\n  },\n  or: {\n    color: colors.gray,\n    textAlign: \"center\",\n    marginVertical: 20,\n  },\n});\n\nexport default LoginScreenUser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}